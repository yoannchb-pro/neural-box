!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";class t{constructor(t){this.sprite=new Image,this.sprite.src=`./sprites/${t}`}}const e=new t("base.png").sprite;class n{constructor(t){this.x=0,this.canvas=t.canvas,this.ctx=t.ctx}update(){this.x-=4,this.x<=-this.canvas.width&&(this.x=0)}draw(){this.ctx.drawImage(e,this.x,this.canvas.height-n.BASE_SIZE,this.canvas.width,n.BASE_SIZE),this.ctx.drawImage(e,this.x+this.canvas.width,this.canvas.height-n.BASE_SIZE,this.canvas.width,n.BASE_SIZE)}}n.BASE_SIZE=100;const s=new t("background.png").sprite;const i=new t("pipedown.png").sprite,h=new t("pipeup.png").sprite;class o{constructor(t){this.width=70,this.passed=!1,this.canvas=t.canvas,this.ctx=t.ctx,this.x=t.x,this.height=Math.max(Math.random()*this.canvas.height-n.BASE_SIZE-1.5*o.PIPE_DISTANCE,200)}update(){this.x-=4,this.x<=-this.canvas.width&&(this.x=0)}draw(){this.ctx.drawImage(i,0,i.height-this.height,i.width,this.height,this.x,0,this.width,this.height);const t=this.height+o.PIPE_DISTANCE;this.ctx.drawImage(h,0,0,h.width,this.canvas.height-n.BASE_SIZE-t,this.x,t,this.width,this.canvas.height-n.BASE_SIZE-t)}}function r(t,e){return Math.random()*(e-t)+t}o.PIPE_DISTANCE=150,o.PIPE_RANGE=250;class c{static getInnovationNumber(t,e){const n=`${t}-${e}`;if(this.innovationHistory.has(n))return this.innovationHistory.get(n);const s=this.currentInnovationNumber++;return this.innovationHistory.set(n,s),s}}c.currentInnovationNumber=0,c.innovationHistory=new Map;class a{constructor(t){var e,n,s,i,h;this.enbaled=!0,this.innovationNumber=c.getInnovationNumber(t.from.id,t.to.id),this.from=t.from,this.to=t.to,this.weight=null!==(e=t.weight)&&void 0!==e?e:r(null!==(s=null===(n=t.weightRange)||void 0===n?void 0:n[0])&&void 0!==s?s:a.DEFAULT_WEIGHT_RANGE[0],null!==(h=null===(i=t.weightRange)||void 0===i?void 0:i[1])&&void 0!==h?h:a.DEFAULT_WEIGHT_RANGE[1])}clone(){return new a({from:this.from,to:this.to,weight:this.weight})}}var d;a.DEFAULT_WEIGHT_RANGE=[-.5,.5],function(t){t[t.HIDDEN=0]="HIDDEN",t[t.INPUT=1]="INPUT",t[t.OUTPUT=2]="OUTPUT",t[t.BIAS=3]="BIAS"}(d||(d={}));class u{constructor(t){this.output=0,this.id=t.id,this.nodeType=t.nodeType,this.nodeType===d.BIAS&&(this.output=1)}clone(){const t=new u({id:this.id,nodeType:this.nodeType});return t.output=this.output,t}}class g{constructor(t){var e,n;if(this.currentNodeId=0,this.fitness=0,this.connections=[],this.nodes=[],this.inputLength=t.inputLength,this.outputLength=t.outputLength,this.weightRange=t.weightRange,Array.isArray(t.hiddenLength)&&t.hiddenLength.length!==t.hiddenLayers)throw new Error('Invalide parameter "hiddenLength" (should be an array of the same size as "hiddenLayers").');this.hiddenLayers=null!==(e=t.hiddenLayers)&&void 0!==e?e:0,this.hiddenLength=null!==(n=t.hiddenLength)&&void 0!==n?n:[0]}generateFullNetwork(){let t=[];const e=new u({id:++this.currentNodeId,nodeType:d.BIAS});this.nodes.push(e),t.push(e);for(let e=0;e<this.inputLength;++e){const e=new u({id:++this.currentNodeId,nodeType:d.INPUT});t.push(e),this.nodes.push(e)}for(let e=0;e<this.hiddenLayers;++e){const n=this.hiddenLength[e],s=[new u({id:++this.currentNodeId,nodeType:d.BIAS})];for(let e=0;e<n;++e){const e=new u({id:++this.currentNodeId,nodeType:d.HIDDEN});for(const n of t){const t=new a({from:n,to:e,weightRange:this.weightRange});this.connections.push(t)}s.push(e),this.nodes.push(e)}t=s}for(let e=0;e<this.outputLength;++e){const e=new u({id:++this.currentNodeId,nodeType:d.OUTPUT});for(const n of t){const t=new a({from:n,to:e,weightRange:this.weightRange});this.connections.push(t)}this.nodes.push(e)}}input(t){if(t.length!==this.inputLength)throw new Error('Number of inputs must match the number of "inputLength".');const e=this.nodes.filter((t=>t.nodeType===d.INPUT)),n=this.nodes.filter((t=>t.nodeType===d.OUTPUT)),s=this.nodes.filter((t=>t.nodeType!==d.INPUT&&t.nodeType!==d.BIAS)),i=this.nodes.filter((t=>t.nodeType!==d.INPUT));for(const t of s)t.output=0;for(let n=0;n<e.length;++n)e[n].output=t[n];for(const t of this.connections){const e=t.to,n=t.from.output*t.weight;e.output+=n}for(const t of i)t.output=(h=t.output,1/(1+Math.exp(-h)));var h;return n.map((t=>t.output))}removeConnection(t){const e=this.connections.findIndex((e=>t===e));-1!==e&&this.connections.splice(e,1)}removeNode(t){this.nodes=this.nodes.filter((e=>e!==t)),this.connections=this.connections.filter((e=>e.from!==t&&e.to!==t))}addNodeInConnection(t){this.removeConnection(t);const e=new u({id:++this.currentNodeId,nodeType:d.HIDDEN});this.nodes.push(e);const n=new a({from:t.from,to:e,weightRange:this.weightRange}),s=new a({from:e,to:t.to,weightRange:this.weightRange});this.connections.push(n,s)}addRandomConnection(){let t=0;const e=this.nodes.length*this.nodes.length;for(;t<e;){const e=r(0,this.nodes.length),n=r(0,this.nodes.length);if(e===n){t++;continue}const s=new a({from:this.nodes[e],to:this.nodes[n],weightRange:this.weightRange});if(!this.connections.some((t=>t.from===s.from&&t.to===s.to)))return this.connections.push(s),s;t++}throw new Error("Failed to add a new connection: too many attempts.")}getWeightRange(){var t;return null!==(t=this.weightRange)&&void 0!==t?t:a.DEFAULT_WEIGHT_RANGE}getConnections(){return this.connections}getNodes(){return this.nodes}setConnections(t){this.connections=t}setNodes(t){this.nodes=t}clone(){const t=new g({inputLength:this.inputLength,outputLength:this.outputLength,hiddenLayers:this.hiddenLayers,hiddenLength:this.hiddenLength}),e=[...this.getConnections().map((t=>t.clone()))];t.setConnections(e);const n=[...this.getNodes().map((t=>t.clone()))];return t.setNodes(n),t}}const p=new t("bird.png").sprite;class w{constructor(t){this.score=0,this.x=w.BIRD_START_POSITION,this.vy=0,this.rotation=0,this.isDead=!1,this.brain=new g({inputLength:4,outputLength:1}),this.canvas=t.canvas,this.ctx=t.ctx,this.y=this.canvas.height/2,this.brain.generateFullNetwork()}checkCollision(t){if(!this.isDead){if(this.canvas.height-this.y<=n.BASE_SIZE)return this.isDead=!0,void(this.y=this.canvas.height-n.BASE_SIZE);if(this.y<=0)return this.isDead=!0,void(this.y=0);for(const e of t)if(this.x>=e.x&&this.x<=e.x+e.width&&(this.y<=e.height||this.y>=e.height+o.PIPE_DISTANCE))return void(this.isDead=!0)}}getFitness(){return this.score}getY(){return this.y}jump(){this.isDead||(this.vy=-15,this.rotation=-55)}update(){this.isDead?this.x>-p.width&&(this.x-=4):(this.score++,this.vy+=1,this.y+=this.vy,this.rotation+=5,this.rotation>90&&(this.rotation=90))}draw(){this.ctx.save();const t=this.rotation*(Math.PI/180),e=this.x+p.width/2;this.ctx.setTransform(1,0,0,1,e,this.y),this.ctx.rotate(t),this.ctx.drawImage(p,-p.width/2,-p.height/2),this.ctx.restore()}}w.BIRD_START_POSITION=40;const l=[];for(let e=0;e<10;++e){const n=new t(`${e}.png`);l.push(n.sprite)}let I=50;let v,f=2;const x=document.querySelector("canvas"),m=x.getContext("2d"),E=document.querySelector("#speed-container"),T=document.querySelector("#birds-count-container"),S=document.querySelector("#generation"),y=document.querySelector("#best-score"),N=new class{constructor(t){this.canvas=t.canvas,this.ctx=t.ctx}draw(){this.ctx.drawImage(s,0,0,this.canvas.width,this.canvas.height-n.BASE_SIZE)}}({canvas:x,ctx:m}),A=new n({canvas:x,ctx:m}),_=new class{constructor(t){this.score=0,this.canvas=t.canvas,this.ctx=t.ctx}getScore(){return this.score}reset(){this.score=0}increase(){this.score++}draw(){const t=this.score.toString().split("");for(let e=0;e<t.length;++e){const n=Number(t[e]),s=l[n];this.ctx.drawImage(s,this.canvas.width/2-s.width/2*t.length+e*s.width,20)}}}({canvas:x,ctx:m}),L=[],R=[];function P(){S.textContent=String(Number(S.textContent)+1),y.textContent=String(Math.max(Number(y.textContent),_.getScore()));for(let t=0;t<x.height;t+=o.PIPE_RANGE){const e=new o({canvas:x,ctx:m,x:x.width+t});L.push(e)}for(let t=0;t<I;++t)R.push(new w({canvas:x,ctx:m}));_.reset()}function D(){m.clearRect(0,0,x.width,x.height),N.draw();let t=!1;for(const e of L)e.update(),e.draw(),!e.passed&&e.x+e.width<w.BIRD_START_POSITION&&(e.passed=!0,_.increase()),e.x+e.width<0&&(t=!0,L.push(new o({canvas:x,ctx:m,x:L[L.length-1].x+o.PIPE_RANGE})));t&&L.shift(),A.update(),A.draw(),_.draw();let e=!1;const n=L.find((t=>t.x+t.width>w.BIRD_START_POSITION));for(const t of R){const s=n.x-w.BIRD_START_POSITION,i=n.height,h=n.height+o.PIPE_DISTANCE;t.brain.input([t.getY(),s,i,h])[0]>.5&&t.jump(),t.update(),t.checkCollision(L),t.isDead||(e=!0),t.draw()}if(!e){R.sort(((t,e)=>e.getFitness()-t.getFitness()));const t=R[0];L.length=0,R.length=0,P();const e=new w({canvas:x,ctx:m});e.brain=t.brain,R.push(e)}}T.addEventListener("click",(()=>{const t=T.querySelector("input:checked");I=Number(t.value)})),E.addEventListener("click",(()=>{const t=E.querySelector("input:checked");f=Number(t.value),clearInterval(v),v=setInterval(D,1e3/30/f)})),P(),v=setInterval(D,1e3/30/f)}));
//# sourceMappingURL=index.js.map
