!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";var t;!function(t){t[t.HIDDEN=0]="HIDDEN",t[t.INPUT=1]="INPUT",t[t.OUTPUT=2]="OUTPUT",t[t.BIAS=3]="BIAS"}(t||(t={}));class e{constructor(e){this.output=0,this.id=e.id,this.nodeType=e.nodeType,this.layer=e.layer,this.nodeType===t.BIAS&&(this.output=1)}toJson(){return{id:this.id,layer:this.layer,nodeType:this.nodeType}}clone(){return new e({id:this.id,layer:this.layer,nodeType:this.nodeType})}}function n(t,e){return Math.random()*(e-t)+t}const i={disableConnection:.1,enableConnection:.1,newConnection:.1,newNode:.1,removeNode:.1,weightModification:.9};class s{static getInnovationNumber(t,e){const n=`${t}-${e}`;if(this.innovationHistory.has(n))return this.innovationHistory.get(n);const i=this.currentInnovationNumber++;return this.innovationHistory.set(n,i),i}}s.currentInnovationNumber=0,s.innovationHistory=new Map;class o{constructor(t){var e,i,h,r,a;this.enabled=!0,this.innovationNumber=s.getInnovationNumber(t.from.id,t.to.id),this.from=t.from,this.to=t.to,this.weight=null!==(e=t.weight)&&void 0!==e?e:n(null!==(h=null===(i=t.weightRange)||void 0===i?void 0:i[0])&&void 0!==h?h:o.DEFAULT_WEIGHT_RANGE[0],null!==(a=null===(r=t.weightRange)||void 0===r?void 0:r[1])&&void 0!==a?a:o.DEFAULT_WEIGHT_RANGE[1])}toJson(){return{innovationNumber:this.innovationNumber,enabled:this.enabled,fromId:this.from.id,toId:this.to.id,weight:this.weight}}clone(){const t=new o({from:this.from,to:this.to,weight:this.weight});return t.enabled=this.enabled,t}}o.DEFAULT_WEIGHT_RANGE=[-.5,.5];class h{constructor(t){var e,n;if(this.currentNodeId=0,this.fitness=0,this.connections=[],this.nodes=[],this.inputLength=t.inputLength,this.outputLength=t.outputLength,this.weightRange=t.weightRange,t.hiddenLength&&t.hiddenLength.length!==t.hiddenLayers)throw new Error(`Invalide parameter "hiddenLength": ${t.hiddenLength.length} (should be an array of the same size as "hiddenLayers": ${t.hiddenLayers}).`);this.hiddenLayers=null!==(e=t.hiddenLayers)&&void 0!==e?e:0,this.hiddenLength=null!==(n=t.hiddenLength)&&void 0!==n?n:[]}static fromJson(t){const n=new h({inputLength:t.inputLength,outputLength:t.outputLength,hiddenLayers:t.hiddenLayers,hiddenLength:t.hiddenLength,weightRange:t.weightRange});let i=0;for(const s of t.nodes)n.nodes.push(new e({id:s.id,layer:s.layer,nodeType:s.nodeType})),i=Math.max(i,s.id);n.currentNodeId=i;for(const e of t.connections){const i=n.nodes.find((t=>t.id===e.fromId)),s=n.nodes.find((t=>t.id===e.toId)),h=new o({from:i,to:s,weight:e.weight,weightRange:t.weightRange});n.connections.push(h)}return n}toJson(){return{connections:this.connections.map((t=>t.toJson())),hiddenLayers:this.hiddenLayers,hiddenLength:this.hiddenLength,inputLength:this.inputLength,nodes:this.nodes.map((t=>t.toJson())),outputLength:this.outputLength,weightRange:this.weightRange}}generateFullNetwork(){let n=[];const i=new e({id:++this.currentNodeId,layer:0,nodeType:t.BIAS});n.push(i),this.nodes.push(i);for(let i=0;i<this.inputLength;++i){const i=new e({id:++this.currentNodeId,layer:0,nodeType:t.INPUT});n.push(i),this.nodes.push(i)}for(let i=0;i<this.hiddenLayers;++i){const s=i+1,h=this.hiddenLength[i],r=[new e({id:++this.currentNodeId,layer:s,nodeType:t.BIAS})];for(let i=0;i<h;++i){const i=new e({id:++this.currentNodeId,layer:s,nodeType:t.HIDDEN});for(const t of n){const e=new o({from:t,to:i,weightRange:this.weightRange});this.connections.push(e)}r.push(i),this.nodes.push(i)}n=r}for(let i=0;i<this.outputLength;++i){const i=new e({id:++this.currentNodeId,layer:this.hiddenLayers+1,nodeType:t.OUTPUT});for(const t of n){const e=new o({from:t,to:i,weightRange:this.weightRange});this.connections.push(e)}this.nodes.push(i)}}input(e){if(e.length!==this.inputLength)throw new Error('Number of inputs must match the number of "inputLength".');const n=[],i=[],s=[];for(const e of this.nodes){switch(e.nodeType){case t.INPUT:n.push(e);break;case t.OUTPUT:i.push(e)}e.nodeType!==t.BIAS&&e.nodeType!==t.INPUT&&s.push(e)}for(const t of s)t.output=0;for(let t=0;t<n.length;++t)n[t].output=e[t];for(const t of this.connections){if(!t.enabled)continue;const e=t.to,n=t.from.output*t.weight;e.output+=n}for(const t of n)t.output=(o=t.output,1/(1+Math.exp(-o)));var o;return i.map((t=>t.output))}removeConnection(t){const e=this.connections.findIndex((e=>t===e));-1!==e&&this.connections.splice(e,1)}removeNode(t){this.nodes=this.nodes.filter((e=>e!==t)),this.connections=this.connections.filter((e=>e.from!==t&&e.to!==t))}addNodeInConnection(n){this.removeConnection(n);const i=new e({id:++this.currentNodeId,layer:n.from.layer+1,nodeType:t.HIDDEN});this.nodes.push(i);const s=new o({from:n.from,to:i,weightRange:this.weightRange}),h=new o({from:i,to:n.to,weightRange:this.weightRange});this.connections.push(s,h)}addRandomConnection(){let e=0;const i=this.nodes.length*this.nodes.length;for(;e<i;){const i=this.nodes.filter((e=>e.nodeType!==t.OUTPUT)),s=i[Math.floor(n(0,i.length))],h=this.nodes.filter((t=>t.layer>s.layer));if(0===h.length){e++;continue}const r=h[Math.floor(n(0,h.length))];if(this.connections.some((t=>t.from.id===s.id&&t.to.id===r.id))){e++;continue}const a=new o({from:s,to:r,weightRange:this.weightRange});return this.connections.push(a),a}throw new Error("Failed to add a new connection: too many attempts.")}getWeightRange(){var t;return null!==(t=this.weightRange)&&void 0!==t?t:o.DEFAULT_WEIGHT_RANGE}getConnections(){return this.connections}getNodes(){return this.nodes}setConnections(t){this.connections=t}setNodes(t){this.nodes=t}clone(){const t=new h({inputLength:this.inputLength,outputLength:this.outputLength,hiddenLayers:this.hiddenLayers,hiddenLength:this.hiddenLength,weightRange:this.weightRange});t.currentNodeId=this.currentNodeId;const e=[...this.getNodes().map((t=>t.clone()))];t.setNodes(e);const n=[...this.getConnections().map((t=>{const n=t.clone();return n.from=e.find((t=>t.id===n.from.id)),n.to=e.find((t=>t.id===n.to.id)),n}))];return t.setConnections(n),t}}class r{constructor(t){this.sprite=new Image,this.sprite.src=`./sprites/${t}`}}const a=new r("base.png").sprite;class c{constructor(t){this.x=0,this.canvas=t.canvas,this.ctx=t.ctx}update(){this.x-=4,this.x<=-this.canvas.width&&(this.x=0)}draw(){this.ctx.drawImage(a,this.x,this.canvas.height-c.BASE_SIZE,this.canvas.width,c.BASE_SIZE),this.ctx.drawImage(a,this.x+this.canvas.width,this.canvas.height-c.BASE_SIZE,this.canvas.width,c.BASE_SIZE)}}c.BASE_SIZE=100;const d=new r("background.png").sprite;const u=new r("pipedown.png").sprite,g=new r("pipeup.png").sprite;class l{constructor(t){this.width=70,this.passed=!1,this.canvas=t.canvas,this.ctx=t.ctx,this.x=t.x,this.height=Math.max(Math.random()*this.canvas.height-c.BASE_SIZE-1.5*l.PIPE_DISTANCE,200)}update(){this.x-=4,this.x<=-this.canvas.width&&(this.x=0)}draw(){this.ctx.drawImage(u,0,u.height-this.height,u.width,this.height,this.x,0,this.width,this.height);const t=this.height+l.PIPE_DISTANCE;this.ctx.drawImage(g,0,0,g.width,this.canvas.height-c.BASE_SIZE-t,this.x,t,this.width,this.canvas.height-c.BASE_SIZE-t)}}l.PIPE_DISTANCE=150,l.PIPE_RANGE=250;const p=new r("bird.png").sprite;class f{constructor(t){this.score=0,this.x=f.BIRD_START_POSITION,this.vy=0,this.rotation=0,this.isDead=!1,this.canvas=t.canvas,this.ctx=t.ctx,this.y=this.canvas.height/2,t.brain?this.brain=t.brain:(this.brain=new h({inputLength:4,outputLength:1}),this.brain.generateFullNetwork())}checkCollision(t){if(!this.isDead){if(this.canvas.height-this.y<=c.BASE_SIZE)return this.isDead=!0,void(this.y=this.canvas.height-c.BASE_SIZE);if(this.y<=0)return this.isDead=!0,void(this.y=0);for(const e of t)if(this.x>=e.x&&this.x<=e.x+e.width&&(this.y<=e.height||this.y>=e.height+l.PIPE_DISTANCE))return void(this.isDead=!0)}}getFitness(){return this.score}getY(){return this.y}jump(){this.isDead||(this.vy=-15,this.rotation=-55)}update(){this.isDead?this.x>-p.width&&(this.x-=4):(this.score++,this.vy+=1,this.y+=this.vy,this.rotation+=5,this.rotation>90&&(this.rotation=90))}draw(){this.ctx.save();const t=this.rotation*(Math.PI/180),e=this.x+p.width/2;this.ctx.setTransform(1,0,0,1,e,this.y),this.ctx.rotate(t),this.ctx.drawImage(p,-p.width/2,-p.height/2),this.ctx.restore()}}f.BIRD_START_POSITION=40;const w=[];for(let t=0;t<10;++t){const e=new r(`${t}.png`);w.push(e.sprite)}let m=50;let I,y=1;const v=document.querySelector("canvas"),T=v.getContext("2d"),x=document.querySelector("#speed-container"),N=document.querySelector("#birds-count-container"),S=document.querySelector("#generation"),E=document.querySelector("#best-score"),L=document.querySelector("#model"),b=document.querySelector("#load-btn"),R=document.querySelector("#model-to-load"),A=document.querySelector("#drawing"),C=new class{constructor(t={}){this.mutationsChances=Object.assign({},i,t.mutationsChances)}crossover(){}mutate(e){const i=e.getConnections(),s=e.getNodes();if(Math.random()<=this.mutationsChances.weightModification&&i.length>0){const t=Math.floor(n(0,i.length)),[s,o]=e.getWeightRange(),h=n(s,o);i[t].weight=h}if(Math.random()<=this.mutationsChances.newConnection&&e.addRandomConnection(),Math.random()<=this.mutationsChances.newNode&&i.length>0){const t=Math.floor(n(0,i.length));e.addNodeInConnection(i[t])}if(Math.random()<=this.mutationsChances.removeNode&&s.length>0){const i=s.filter((e=>e.nodeType===t.HIDDEN));if(i.length>0){const t=Math.floor(n(0,i.length));e.removeNode(i[t])}}if(Math.random()<=this.mutationsChances.disableConnection&&i.length>0){const e=i.filter((e=>e.from.nodeType!==t.BIAS&&e.to.nodeType!==t.BIAS));if(e.length>0){e[Math.floor(n(0,e.length))].enabled=!1}}if(Math.random()<=this.mutationsChances.enableConnection){const e=i.filter((t=>!t.enabled)).filter((e=>e.from.nodeType!==t.BIAS&&e.to.nodeType!==t.BIAS));if(e.length>0){e[Math.floor(n(0,e.length))].enabled=!0}}}generateChildrens(t,e){return[]}},P=new class{constructor(t){this.canvas=t.canvas,this.ctx=t.ctx}draw(){this.ctx.drawImage(d,0,0,this.canvas.width,this.canvas.height-c.BASE_SIZE)}}({canvas:v,ctx:T}),_=new c({canvas:v,ctx:T}),D=new class{constructor(t){this.score=0,this.canvas=t.canvas,this.ctx=t.ctx}getScore(){return this.score}reset(){this.score=0}increase(){this.score++}draw(){const t=this.score.toString().split("");for(let e=0;e<t.length;++e){const n=Number(t[e]),i=w[n];this.ctx.drawImage(i,this.canvas.width/2-i.width/2*t.length+e*i.width,20)}}}({canvas:v,ctx:T}),M=[],B=[];function U(t){S.textContent=String(Number(S.textContent)+1),E.textContent=String(Math.max(Number(E.textContent),D.getScore()));for(let t=0;t<v.height;t+=l.PIPE_RANGE){const e=new l({canvas:v,ctx:T,x:v.width+t});M.push(e)}const e=t=>new f({canvas:v,ctx:T,brain:t});let n=m;if(t){const i=e(t.clone());B.push(i),n-=1}for(let i=0;i<n;++i){let n;t&&i%10!=0&&(n=t.clone(),C.mutate(n));const s=e(n);B.push(s)}D.reset()}function O(){B.sort(((t,e)=>e.getFitness()-t.getFitness()));return B[0].brain}function k(){const e=O().toJson();L.value=JSON.stringify(e),function(e,n){const i=n.getContext("2d");i.clearRect(0,0,n.width,n.height);const s={},o=e.nodes.filter((e=>e.nodeType===t.INPUT)),h=e.nodes.filter((e=>e.nodeType===t.BIAS)),r=e.nodes.filter((e=>e.nodeType===t.HIDDEN)),a=e.nodes.filter((e=>e.nodeType===t.OUTPUT)),c=[];c.push([...o.map((t=>t.id)),...h.map((t=>t.id))]),r.length>0&&c.push(r.map((t=>t.id))),c.push(a.map((t=>t.id)));const d=.1*n.width,u=.1*n.height,g=n.width-2*d,l=n.height-2*u,p=g/(c.length-1),f=Math.max(...c.map((t=>t.length))),w=f>1?l/(f-1):0,m=Math.max(5,Math.min(15,n.width/50)),I=Math.max(3,n.width/100);c.forEach(((t,e)=>{const n=d+e*p;t.forEach(((t,e)=>{const i=u+e*w;s[t]={x:n,y:i}}))})),e.connections.forEach((t=>{if(!t.enabled)return;const e=s[t.fromId],n=s[t.toId];if(!e||!n)return;const o=Math.abs(t.weight);i.strokeStyle=t.weight>0?"blue":"red",i.lineWidth=1+o*(I-1),i.beginPath(),i.moveTo(e.x,e.y),i.lineTo(n.x,n.y),i.stroke()})),e.nodes.forEach((e=>{const n=s[e.id];n&&(i.fillStyle=e.nodeType===t.BIAS?"grey":e.nodeType===t.HIDDEN?"orange":e.nodeType===t.INPUT?"cyan":"yellow",i.beginPath(),i.arc(n.x,n.y,m,0,2*Math.PI),i.fill(),i.strokeStyle="black",i.stroke())}))}(e,A)}function H(){T.clearRect(0,0,v.width,v.height),P.draw();let t=!1;for(const e of M)e.update(),e.draw(),!e.passed&&e.x+e.width<f.BIRD_START_POSITION&&(e.passed=!0,D.increase()),e.x+e.width<0&&(t=!0,M.push(new l({canvas:v,ctx:T,x:M[M.length-1].x+l.PIPE_RANGE})));t&&M.shift(),_.update(),_.draw(),D.draw();let e=!1;const n=M.find((t=>t.x+t.width>f.BIRD_START_POSITION));for(const t of B){const i=n.x-f.BIRD_START_POSITION,s=n.height,o=n.height+l.PIPE_DISTANCE;t.brain.input([t.getY(),i,s,o])[0]>.5&&t.jump(),t.update(),t.checkCollision(M),t.isDead||(e=!0),t.draw()}if(k(),!e){const t=O();M.length=0,B.length=0,U(t)}}N.addEventListener("click",(()=>{const t=N.querySelector("input:checked");m=Number(t.value)})),x.addEventListener("click",(()=>{const t=x.querySelector("input:checked");y=Number(t.value),clearInterval(I),I=setInterval(H,1e3/60/y)})),b.addEventListener("click",(()=>{var t;try{const e=JSON.parse(null===(t=R.value)||void 0===t?void 0:t.trim());R.value="";const n=h.fromJson(e);M.length=0,B.length=0,U(n)}catch(t){console.error(t),R.value=t}})),U(),I=setInterval(H,1e3/60/y)}));
//# sourceMappingURL=index.js.map
